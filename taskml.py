# -*- coding: utf-8 -*-
"""taskml.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g4Y6YJNx005FbSmrIUoPI2j8r3BqK_M0
"""

import requests

def fetch_user_repositories(username, access_token):
    url = f"https://api.github.com/users/{preetiai}/repos"
    headers = {"Authorization": f"Bearer {access_token}"}
    response = requests.get(url, headers=headers)

    if response.status_code == 200:
        repositories = response.json()
        return repositories
    else:
        print(f"Failed to fetch repositories. Status code: {response.status_code}")
        return []

# Usage
username = "preetiai"
access_token = "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"
repos = fetch_user_repositories(username, access_token)

import os

def preprocess_code(repository_path):
    # Implement preprocessing logic here
    pass

# Clone or download repositories
repo_url = "https://github.com/Preetiai/ML_tutorial"
repo_name = repo_url.split("/")[-1].split(".")[0]
repo_path = f"repositories/{repo_name}"
os.system(f"git clone {repo_url} {repo_path}")

# Preprocess code
preprocess_code(repo_path)

import openai

def evaluate_code_with_prompt(code, prompt):
    openai.api_key = "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"
    response = openai.Completion.create(
        engine="text-davinci-002",
        prompt=prompt + "\nCode:\n" + code,
        max_tokens=200,
        n = 1
    )
    return response.choices[0].text.strip()

# Usage
code = "def add(a, b):\n    return a + b"
prompt = "Please evaluate the complexity of the following code:"
result = evaluate_code_with_prompt(code, prompt)
print("GPT Response:", result)